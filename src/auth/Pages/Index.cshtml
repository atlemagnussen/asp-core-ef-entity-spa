@page
@using Test.auth.Pages
@model IndexModel
@{
    var version = typeof(IdentityServer4.Hosting.IdentityServerMiddleware).Assembly.GetName().Version.ToString();
}

<h1 class="mt-5">Welcome to AuthServer!</h1>
<p class="lead">Powered by IdentityServer4 <small>(version @version)</small></p>

<h3>config</h3>
<p>AllowedClient: @Model.AllowedClientUrl</p>
<p>ClientId: @Model.AzureAdClientId<p>
<p></p>
<h4>Azure Key Vault values</h4>
<p>
    <span style="font-weight: bold">Configuration.GetConnectionString("AuthDb")</span>
    <span>@Model.ConnectionString1</span>
</p>
<p>
    <span style="font-weight: bold">Configuration.GetConnectionString("BankDatabase")</span>
    <span>@Model.ConnectionString2</span>
</p>
<p>
    <span style="font-weight: bold">Configuration["SecretName"]</span><br />
    <span>@Model.Secret1</span>
</p>
<p>
    <span style="font-weight: bold">Configuration["Section:SecretName"]</span><br />
    <span>@Model.Secret2</span>
</p>
<p>
    <span style="font-weight: bold">Configuration.GetSection("Section")["SecretName"]</span><br />
    <span>@Model.Secret3</span>
</p>
<p>
    <span style="font-weight: bold">Configuration.GetValue&lt;string&gt;("SecretName")</span><br />
    <span>@Model.Secret4</span>
</p>
<h4>Azure Key Vault keys</h4>
@if (Model.IsDevelopment)
{
    <p>Not available in development</p>
}
else
{
    <p>
        <h5>Rsa</h5>
        <span style="font-weight: bold">Algorithm</span><br />
        <span>@Model.RsaKey.Algorithm</span><br />
        <span style="font-weight: bold">KeyType</span><br />
        <span>@Model.RsaKey.KeyType</span><br />
        <span style="font-weight: bold">CurveName</span><br />
        <span>@Model.RsaKey.CurveName</span><br />
        <span style="font-weight: bold">SignatureAlgorithm</span><br />
        <span>@Model.RsaKey.SignatureAlgorithm</span><br />
    </p>
    <p>
        <h5>Ec</h5>
        <span style="font-weight: bold">Algorithm</span><br />
        <span>@Model.EcKey.Algorithm</span><br />
        <span style="font-weight: bold">KeyType</span><br />
        <span>@Model.EcKey.KeyType</span><br />
        <span style="font-weight: bold">CurveName</span><br />
        <span>@Model.EcKey.CurveName</span><br />
        <span style="font-weight: bold">SignatureAlgorithm</span><br />
        <span>@Model.EcKey.SignatureAlgorithm</span><br />
    </p>
}

<p><a href=".well-known/openid-configuration">Discovery document</a></p>
<p><a href="Login">Go to login</a></p>
<p><a href="@Model.ClientUrl">Go to client</a></p>